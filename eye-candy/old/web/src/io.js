// http://stackoverflow.com/questions/26643370/get-user-id-socket-io-passport-koa
const IO = require( 'koa-socket' )
const io = new IO()
const convert = require('koa-convert');
const session = require('koa-generic-session');


// var cookie = require('cookie'),
//     co = require('co'),
//     store = require('./store')(null); // We don't require the Koa app

// io.use( async (ctx, next) => {
//     // Now you will need to set up the authorization middleware. In order to
//     // authenticate, you will need the SID from the cookie generated by
//     // koa-generic-session. The property name is by default 'koa.sid'.

//     const sid = cookie.parse(socket.handshake.headers.cookie)['koa.sid'];

//     ctx.session = store.get('koa:sess:' + sid)

//     await next()

//     // We need co to handle generators for us or everything will blow up
//     // when you try to access data stores designed for Koa.

//     // co(function*(){
//     //     // 'koa:sess:' is the default prefix for generic sessions.
//     //     var session = yield store.get('koa:sess:' + sid);

//     //     // At this point you can do any validation you'd like. If all is well,
//     //     // authorize the connection. Feel free to add any additional properties
//     //     // to the handshake from the session if you please.

//     //     if (session) next(null, true) // authenticated
//     //     else throw new Error('Authentication error.');
//     // });
// });

io.use(convert(session({
        store: require('./store')(null)
    })));

io.on( 'connection', ( ctx, data ) => {
  console.log( 'User connected!!!')
})

io.on('window', (ctx, data) => {
	console.log('in window')
	console.log('got windowHeight', data.windowHeight)
    ctx.session.windowHeight = data.windowHeight
    ctx.session.windowWidth = data.windowWidth
})

export default io
